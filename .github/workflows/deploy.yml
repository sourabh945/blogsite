name: CI Pipeline with PostgreSQL

on:
  push:
    branches:
      - main  # Run the workflow on pushes to the main branch
  pull_request: # Optionally run tests on pull requests
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15  # Specify the PostgreSQL version
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 5432:5432

    steps:
    # 1. Check out the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # 3. Install dependencies
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Migrate Database
      run: |
        python manage.py makemigrations
        python manage.py migrate

    # 4. Wait for PostgreSQL to be ready
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U testuser; do
          echo "Waiting for PostgreSQL..."
          sleep 1
        done

    # 6. Run tests
    - name: Run Tests
      env:
        DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
      run: |
        python manage.py test 

    - name: Deploy to Render 
      if: success()
      env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      run: |
        curl "$deploy_url"